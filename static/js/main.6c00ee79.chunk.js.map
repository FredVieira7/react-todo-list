{"version":3,"sources":["App.styles.ts","components/ListItem/styles.ts","components/ListItem/index.tsx","components/addArea/styles.ts","components/addArea/index.tsx","App.tsx","index.tsx"],"names":["Container","styled","div","Area","Header","h1","done","ListItem","item","onChange","type","checked","e","id","target","name","AddArea","onEnter","useState","inputText","setInputText","className","placeholder","value","onKeyUp","code","App","list","setList","handleTaskChange","newList","i","taskName","push","length","map","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMAKaA,EAAYC,IAAOC,IAAV,uGAMTC,EAAOF,IAAOC,IAAV,4FAMJE,EAASH,IAAOI,GAAV,wKCXNL,EAAYC,IAAOC,KAAI,gBAAGI,EAAH,EAAGA,KAAH,gkBA6BTA,EAAO,eAAiB,UA7Bf,iB,OCEvBC,EAAW,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,SAC7B,OACI,eAAC,EAAD,CAAaH,KAAME,EAAKF,KAAxB,UACI,uBACII,KAAK,WACLC,QAASH,EAAKF,KACdG,SAAU,SAAAG,GAAC,OAAIH,EAASD,EAAKK,GAAID,EAAEE,OAAOH,YAE9C,yBACA,gCAAQH,EAAKO,WCfZf,EAAYC,IAAOC,IAAV,8XCKTc,EAAU,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QACtB,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KASA,OACI,eAAC,EAAD,WACI,qBAAKC,UAAU,QAAf,oBACA,uBACIX,KAAK,OACLY,YAAY,sBACZC,MAAOJ,EACPV,SAAU,SAAAG,GAAC,OAAEQ,EAAaR,EAAEE,OAAOS,QACnCC,QAfQ,SAACZ,GACH,UAAXA,EAAEa,MAAkC,KAAdN,IACrBF,EAAQE,GACRC,EAAa,YCyCVM,G,MA/CH,WACV,MAAwBR,mBAAiB,CACvC,CAAEL,GAAI,EAAGE,KAAM,8BAA4BT,MAAM,GACjD,CAAEO,GAAI,EAAGE,KAAM,6BAA8BT,MAAM,KAFrD,mBAAOqB,EAAP,KAAaC,EAAb,KAgBMC,EAAmB,SAAChB,EAAYP,GACpC,IAAIwB,EAAO,YAAOH,GAClB,IAAI,IAAII,KAAKD,EACRA,EAAQC,GAAGlB,KAAOA,IACnBiB,EAAQC,GAAGzB,KAAOA,GAGtBsB,EAAQE,IAGV,OACG,cAAC,EAAD,UACG,eAAC,EAAD,WACE,cAAC,EAAD,+BAEA,cAAC,EAAD,CAASb,QA1BK,SAACe,GACrB,IAAIF,EAAO,YAAOH,GAClBG,EAAQG,KAAK,CACXpB,GAAIc,EAAKO,OAAS,EAClBnB,KAAMiB,EACN1B,MAAM,IAERsB,EAAQE,MAqBDH,EAAKQ,KAAI,SAAC3B,EAAM4B,GAAP,OACR,cAAC,EAAD,CAEE5B,KAAMA,EACNC,SAAUoB,GAFLO,aCvCnBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6c00ee79.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\n\r\nexport const Container = styled.div`\r\n    background-color: #17181F;\r\n    color: white;\r\n    min-height: 100vh;\r\n`;\r\n\r\nexport const Area = styled.div`\r\n    margin: 0 auto;\r\n    max-width: 980px;\r\n    padding: 10px;\r\n`;\r\n\r\nexport const Header = styled.h1`\r\n    margin: 0;\r\n    padding: 0;\r\n    color: white;\r\n    text-align: center;\r\n    padding-bottom: 10px;\r\n    border-bottom: 1px solid #ccc;\r\n`;","import styled from 'styled-components';\r\n\r\ntype ContainerProps = {\r\n    done: boolean;\r\n}\r\n\r\nexport const Container = styled.div(({ done }: ContainerProps)=>(\r\n    `\r\n    display: flex;\r\n    background-color: #20212C;\r\n    padding: 10px;\r\n    border-radius: 12px;\r\n    margin-bottom: 15px;\r\n    align-items: center;\r\n    \r\n    input {\r\n        all: unset;\r\n        border: 1px solid black;\r\n        width: 25px;\r\n        height: 25px;\r\n        margin-right: 10px;\r\n        display: inline-block;\r\n    }\r\n\r\n    input:not(:checked) {\r\n        background-color: red;\r\n        color: white;\r\n    }\r\n\r\n    input:checked {\r\n        background-color: green;\r\n    }\r\n    \r\n    label {\r\n        color: #CCC;\r\n        text-decoration: ${done ? 'line-through' : 'initial'};\r\n    }\r\n`\r\n));","import * as C from './styles';\r\nimport { Item } from '../../types/item';\r\n\r\ntype Props = {\r\n    item: Item,\r\n    onChange: (id: number, done: boolean) => void\r\n}\r\n\r\nexport const ListItem = ({ item, onChange }: Props) => {\r\n    return (\r\n        <C.Container done={item.done}>\r\n            <input\r\n                type=\"checkbox\"\r\n                checked={item.done}\r\n                onChange={e => onChange(item.id, e.target.checked)}\r\n            />\r\n            <span></span>\r\n            <label>{item.name}</label>\r\n        </C.Container>\r\n    );\r\n}","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n    border: 1px solid #555;\r\n    border-radius: 15px;\r\n    padding: 10px;\r\n    margin: 20px 0;\r\n    display: flex;\r\n    align-items: center;\r\n    .image {\r\n        margin-right: 5px;\r\n    }\r\n    input {\r\n        border: 0px;\r\n        background: transparent;\r\n        outline: 0;\r\n        color: #FFF;\r\n        font-size: 18px;\r\n        flex: 1;\r\n    }\r\n`;","import { useState, KeyboardEvent } from 'react';\r\nimport * as C from './styles';\r\n\r\ntype Props = {\r\n    onEnter: (taskName: string) => void\r\n}\r\n\r\nexport const AddArea = ({ onEnter }: Props) => {\r\n    const [inputText, setInputText] = useState('');\r\n\r\n    const handleKeyUp = (e: KeyboardEvent) => {\r\n        if(e.code === 'Enter' && inputText !== '') {\r\n            onEnter(inputText);\r\n            setInputText('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <C.Container>\r\n            <div className=\"image\">➕</div>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Adicione uma tarefa\"\r\n                value={inputText}\r\n                onChange={e=>setInputText(e.target.value)}\r\n                onKeyUp={handleKeyUp}\r\n            />\r\n        </C.Container>\r\n    );\r\n}","import { useState } from 'react';\nimport * as C from './App.styles';\nimport { Item } from './types/item';\nimport { ListItem } from './components/ListItem';\nimport { AddArea } from './components/addArea';\nimport './reset.css';\n\nconst App = () => {\n  const [list, setList] = useState<Item[]>([\n    { id: 1, name: 'Comprar o pão na padaria', done: false },\n    { id: 2, name: 'Comprar um bolo na padaria', done: true },\n  ]);\n\n  const handleAddTask = (taskName: string) => {\n    let newList = [...list];\n    newList.push({\n      id: list.length + 1,\n      name: taskName,\n      done: false\n    });\n    setList(newList);\n  }\n\n  // Função feita para tarefinha de casa.\n  const handleTaskChange = (id: number, done: boolean) => {\n    let newList = [...list];\n    for(let i in newList) {\n      if(newList[i].id === id) {\n        newList[i].done = done;\n      }\n    }\n    setList(newList);\n  }\n\n  return (\n    \t<C.Container>\n        <C.Area>\n          <C.Header>Lista de Tarefas</C.Header>\n\n          <AddArea onEnter={handleAddTask} />\n\n          {list.map((item, index)=>(\n            <ListItem\n              key={index}\n              item={item}\n              onChange={handleTaskChange}\n            />\n          ))}\n\n        </C.Area>\n      </C.Container>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}